# utils/audio.py
import os
import requests
import tempfile
from pydub import AudioSegment
import speech_recognition as sr

# Thi·∫øt l·∫≠p ƒë∆∞·ªùng d·∫´n ffmpeg ph√π h·ª£p h·ªá ƒëi·ªÅu h√†nh
if os.name == 'nt':
    ffmpeg_path = r"D:\tools-upgraders\ffmpeg-2025-04-14-git-3b2a9410ef-essentials_build\bin"
    os.environ["PATH"] += os.pathsep + ffmpeg_path
    AudioSegment.converter = os.path.join(ffmpeg_path, "ffmpeg.exe")
    AudioSegment.ffprobe = os.path.join(ffmpeg_path, "ffprobe.exe")
else:
    AudioSegment.converter = "/usr/bin/ffmpeg"
    AudioSegment.ffprobe = "/usr/bin/ffprobe"

# In ki·ªÉm tra
print("‚úÖ FFMPEG PATH:", AudioSegment.converter)
print("‚úÖ FFPROBE PATH:", AudioSegment.ffprobe)


def transcribe_audio_from_urls(audio_urls):
    """
    Nh·∫≠n danh s√°ch URL audio, tr√≠ch xu·∫•t vƒÉn b·∫£n b·∫±ng Google Speech Recognition.
    """
    if not isinstance(audio_urls, list):
        audio_urls = [audio_urls]

    recognizer = sr.Recognizer()
    transcripts = []

    for url in audio_urls:
        try:
            # T·∫£i v·ªÅ file mp3 t·∫°m th·ªùi
            response = requests.get(url)
            print(response)
            with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as temp_mp3:
                temp_mp3.write(response.content)
                mp3_path = temp_mp3.name

            print(f"üéß ƒê√£ t·∫£i v·ªÅ mp3: {mp3_path}")

            # Chuy·ªÉn sang wav
            wav_path = mp3_path.replace(".mp3", ".wav")
            audio = AudioSegment.from_mp3(mp3_path)
            audio.export(wav_path, format="wav")

            print(f"üîÑ ƒê√£ chuy·ªÉn sang wav: {wav_path}")

            # D√πng speech_recognition nh·∫≠n d·∫°ng
            with sr.AudioFile(wav_path) as source:
                audio_data = recognizer.record(source)
                try:
                    text = recognizer.recognize_google(audio_data, language='en-US')
                    print(f"üó£Ô∏è  Nh·∫≠n d·∫°ng: {text}")
                    transcripts.append(text.strip())
                except sr.UnknownValueError:
                    transcripts.append("‚ö†Ô∏è Kh√¥ng th·ªÉ nh·∫≠n d·∫°ng n·ªôi dung √¢m thanh.")
                except sr.RequestError as e:
                    transcripts.append(f"‚ùå L·ªói k·∫øt n·ªëi t·ªõi Google API: {e}")

            os.remove(mp3_path)
            os.remove(wav_path)

        except Exception as e:
            transcripts.append(f"‚ùå Kh√¥ng x·ª≠ l√Ω ƒë∆∞·ª£c audio t·ª´ {url}: {str(e)}")

    return "\n".join(transcripts)
